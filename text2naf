#!/usr/bin/python3
# text2naf -- wrap a text in a raw NAF
# Usage: e.g. "cat textfile | text2naf nl >naffile"
# 20160304 Emiel van Miltenburg
# 20160306 Paul Huygen

import sys
import argparse
import datetime


def _format_argument(label, value):
    "Format a an argument in an XML tag."
    if value == None:
        return ""
    else:
        return label + '="' + value + '"'


def naffile(text, lang, date, uri, source, pubID):
     "Write text to a raw naf file."
     file_start       = '<NAF xml:lang="{}" version="v3">'.format(lang)
     nafheader_start  = '<nafHeader>'

     file_description = '<fileDesc {} {} type="plain text" />'.format( _format_argument("source", source)
                                                                            , _format_argument("creationtime", date)
                                                                            )
     Id_tag = '<public {} {}/>'.format(_format_argument("publicId", pubID),  _format_argument("uri", uri))
     nafheader_end    = '</nafHeader>'
     contents_start   = '<raw><![CDATA['
     contents_end     = ']]></raw>'
     rawtext_part     = contents_start + text + contents_end
     file_end         = '</NAF>'
     return '\n'.join( [file_start
                       , nafheader_start
                       , file_description
                       , Id_tag
                       , nafheader_end
                       , rawtext_part
                       , file_end
                       ]
                     )


#
# Optional arguments.
# 1. Language (Default en)
# 2. Document source
# 3. URI
# 4. PublicID
# 5. Date (Default now)

parser = argparse.ArgumentParser(description='Wrap text in NAF.')
parser.add_argument( '-l', '--naflang'
                   ,  default='en'
                   ,  help='Document language (eg. nl)'
                   )
parser.add_argument( '-s', '--source'
                   ,  default=None
                   ,  help='Document source.'
                   )
parser.add_argument( '-u', '--uri'
                   ,  default=None
                   ,  help='URI of document.'
                   )
parser.add_argument( '-p', '--public_id'
                   ,  default=None
                   ,  help='Public_ID of document.'
                   )
parser.add_argument( '-d', '--date'
                   ,  default=datetime.datetime.now().isoformat()
                   ,  help='Creation date of document.'
                   )
args = parser.parse_args()

text=""        
for line in sys.stdin:
    if text=="":
        text=line.rstrip('\n\r ')
    else:
        text = '\n'.join([text, line.rstrip('\n\r ')])

naf=naffile(text, args.naflang, args.date, args.uri, args.source, args.public_id)

print(naf)
